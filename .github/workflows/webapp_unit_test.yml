# This is a basic workflow to help you get started with Actions

name: Unit Tests for webapp

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      # Runs a single command using the runners shell
      - name: Build Docker Images
        run: |
          pip install coveralls
          docker-compose -f ./docker-compose-unit-test.yml build -m 8g

      # Runs a set of commands using the runners shell
      - name: Run Unit Tests
        run: |
          git lfs fetch --all
          docker run -v $(pwd):/appsrc -w /appsrc pennai_unit_tester mocha machine/test/test.js
          docker run -v $(pwd):/appsrc -v /appsrc/lab/webapp/node_modules -w /appsrc/lab/webapp/ pennai_unit_tester npm run test
          docker run -v $(pwd):/appsrc -w /appsrc pennai_unit_tester \
              coverage run -m nose -s -v \
              machine/test/learn_tests.py \
              lab/pyutils/tests/*.py \
              ai/tests/test_a*.py \
              ai/tests/lab_*.py \
              ai/tests/test_re*.py \
              ai/tests/test_k*utils.py

      - name: Coverage Report
        run: |
          coverage combine
          coveralls
