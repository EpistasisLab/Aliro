/* ~This file is part of the Aliro library~

Copyright (C) 2023 Epistasis Lab, Cedars-Sinai Medical Center

Aliro is maintained by:
    - Jun Choi (hyunjun.choi@cshs.org)
    - Miguel Hernandez (miguel.e.hernandez@cshs.org)
    - Nick Matsumoto (nicholas.matsumoto@cshs.org)
    - Jay Moran (jay.moran@cshs.org)
    - and many other generous open source contributors

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

(Autogenerated header, do not modify)

*/
import { combineReducers } from 'redux';
import {
  FETCH_EXPERIMENT_REQUEST,
  FETCH_EXPERIMENT_SUCCESS,
  FETCH_EXPERIMENT_FAILURE,
  CLEAR_EXPERIMENT
} from './actions';

const data = (state = null, action) => {
  switch(action.type) {
    case FETCH_EXPERIMENT_SUCCESS:
      return action.payload;
    case CLEAR_EXPERIMENT:
      return null;  
    default:
      return state; 
  }
};

const isFetching = (state = false, action) => {
  switch(action.type) {
    case FETCH_EXPERIMENT_REQUEST:
      return true;
    case FETCH_EXPERIMENT_SUCCESS:
    case FETCH_EXPERIMENT_FAILURE:
      return false;
    default:
      return state;
  }
};

const error = (state = null, action) => {
  switch(action.type) {
    case FETCH_EXPERIMENT_FAILURE:
      return action.payload;
    default:
      return state;  
  }
};

const experiment = combineReducers({
  data,
  isFetching,
  error
});

export default experiment;