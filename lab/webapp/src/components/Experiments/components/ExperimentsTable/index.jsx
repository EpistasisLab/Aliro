/* ~This file is part of the Aliro library~

Copyright (C) 2023 Epistasis Lab, 
Center for Artificial Intelligence Research and Education (CAIRE),
Department of Computational Biomedicine (CBM),
Cedars-Sinai Medical Center.

Aliro is maintained by:
    - Hyunjun Choi (hyunjun.choi@cshs.org)
    - Miguel Hernandez (miguel.e.hernandez@cshs.org)
    - Nick Matsumoto (nicholas.matsumoto@cshs.org)
    - Jay Moran (jay.moran@cshs.org)
    - and many other generous open source contributors

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

(Autogenerated header, do not modify)

*/
import React from 'react';
import ExperimentsTableHeader from './components/ExperimentsTableHeader';
import ExperimentsTableBody from './components/ExperimentsTableBody';
import { Table } from 'semantic-ui-react';

function ExperimentsTable({
  experiments, 
  filters,
  sortSingle,
  updateQuery
}) {
  //'experiments' is an array of experiments, and in the case of viewMode 'simple' will
  // may have multiple different algorithm types. In the case of viewMode 'expanded' it 
  // will have experiments only of the same algorithm.
  const selectedStatus = filters.status.selected;
  const selectedDataset = filters.dataset.selected;
  let selectedAlgorithm = filters.viewMode === "simple" ? filters.algorithm.selected : experiments[0].algorithm;
  const currentParameters = experiments[0].params;
  const shouldDisplayQuality = selectedStatus === 'suggested';
  const shouldDisplayAwards = selectedDataset !== 'all';
  let shouldDisplayParams = filters.viewMode === "expanded" || (selectedAlgorithm !== 'all' && Object.keys(currentParameters).length > 0);
  const shouldDisplayErrorMessage = selectedStatus === 'fail';
  const orderedParamKeys = Object.keys(currentParameters).sort();

  return (
    <div className="table-container">
      <Table 
        inverted
        basic
        celled
        compact
        selectable
        sortable
        structured
        unstackable
      >
        <ExperimentsTableHeader
          selectedAlgorithm={selectedAlgorithm}
          shouldDisplayQuality={shouldDisplayQuality}
          shouldDisplayParams={shouldDisplayParams}
          shouldDisplayErrorMessage={shouldDisplayErrorMessage}
          orderedParamKeys={orderedParamKeys}
          sortSingle={sortSingle}
          updateQuery={updateQuery}
        />
        <ExperimentsTableBody
          experiments={experiments}
          shouldDisplayQuality={shouldDisplayQuality}
          shouldDisplayAwards={shouldDisplayAwards}
          shouldDisplayParams={shouldDisplayParams}
          shouldDisplayErrorMessage={shouldDisplayErrorMessage}
          orderedParamKeys={orderedParamKeys}
        />
      </Table>
    </div>  
  );
}

export default ExperimentsTable;