extends ./layout.jade

block title
  title Idea Factory: Machine #{machine.hostname}

block content
  h1 #[span#machine-status.mega-octicon.octicon-device-desktop] Machine: #{machine.hostname} #[small.text-muted (#{machine._id})]
  
  .col-sm-12.col-md-8
    .card
      .card-header
        h4 Specifications  
      .card-block  
        dl.dl-horizontal
          dt.col-sm-2 Hostname
          dd.col-sm-10 #{machine.hostname}
          dt.col-sm-2 Address
          dd.col-sm-10 #{machine.address}
          dt.col-sm-2 OS
          dd.col-sm-10 #{machine.os.type} #{machine.os.arch} #{machine.os.release}
          dt.col-sm-2 CPUs
          dd.col-sm-10
            ul.list-unstyled
              - each cpu in machine.cpus
                li= cpu
          dt.col-sm-2 RAM
          dd.col-sm-10 #{machine.mem}
          dt.col-sm-2 GPUs
          dd.col-sm-10
            ul.list-unstyled
              - each gpu in machine.gpus
                li= gpu
                
  .col-sm-12.col-md-4
    .card
      .card-header
        h4 Projects              
      ul#projects.list-group
        - each project in projects
          #[a(href="/projects/" + project._id).list-group-item #{project.name}]

block scripts
  script.
    $(function() {
      var host = "#{machine.address}".replace(/^http/, 'ws'); // WebSocket server address
      var ws = null; // WebSocket
      var $status = $("#machine-status"); // Machine status icon

      // Connects to WebSocket server
      var wsConnect = function() {
        ws = new WebSocket(host); // Attempt to connect

        // Set server status as on
        ws.onopen = function(event) {
          $status.removeClass("text-danger");
          $status.addClass("text-success");
        };
        // Set server status as off
        ws.onclose = function(event) {
          // Set status
          $status.removeClass("text-success");
          $status.addClass("text-danger");
        };
      };

      // Reconnects to WebSocket server if needed
      var wsReconnect = function() {
        if (!ws || ws.readyState === WebSocket.CLOSED) {
          wsConnect();
        }
      };

      // Connect 
      wsConnect();
      // Attempt to reconnect every 5s if necessary
      setInterval(wsReconnect, 5000);
    });
